# WordPress single site rules.
# Designed to be included in any server {} block.

#rewrite to validate rewrites in W3TC
rewrite ^(.*\/)?w3tc_rewrite_test(.*?)\/?$ $1?w3tc_rewrite_test=1 last;

# Add trailing slash to */wp-admin requests.
rewrite /wp-admin$ $scheme://$host$uri/ permanent;
# Add rewrites to support sitemaps.
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;

# Directives to send expires headers and turn off 404 error logging.
location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
	access_log off; log_not_found off; expires max;
}

location / {

	error_page 418 = @cachemiss;
	recursive_error_pages on;

	if ($request_method = POST) { return  418; }
	if ($query_string != "") { return 418; }
	if ($request_uri !~ \/$) { return 418; }
	if ($http_cookie ~* "(comment_author|wp\-postpass|w3tc_logged_out|wordpress_logged_in|wptouch_switch_toggle)") { return 418; }

	# WARNING ! This does not work with https because of the variable $w3tc_ssl which is not set.
	# That's because if is evil (https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/#what-to-do-instead)
	# Find a way to test it without if.

	set $w3tc_ssl "";
	#if ($scheme = https) { set $w3tc_ssl "_ssl"; }

        try_files "/wp-content/cache/page_enhanced/$host/$request_uri/_index$w3tc_ssl.html" =418 ;

	add_header "X-W3TC-Cache" true;
}

location @cachemiss {

	try_files $uri $uri/ /index.php$is_args$args;

	add_header "X-W3TC-Cache" false;
	add_header "X-NGIX-Block" "static";

}

location ~ [^/]\.php(/|$) {

	fastcgi_split_path_info ^(.+?\.php)(/.*)$;
	
	# Below is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)
	try_files $fastcgi_script_name =404 ;

	# if not processed through cache, add this flag in header
	add_header "X-W3TC-Cache" false;
	add_header "X-NGIX-Block" "php";

	# Mitigate https://httpoxy.org/ vulnerabilities
	fastcgi_param HTTP_PROXY "";

	include /etc/nginx/fastcgi_params;
	fastcgi_index index.php;

	fastcgi_pass "${PHP_FPM_HOST}";

	fastcgi_param SCRIPT_FILENAME "${PHP_FPM_ROOT_DIR}$fastcgi_script_name";

#	fastcgi_intercept_errors on;
}

